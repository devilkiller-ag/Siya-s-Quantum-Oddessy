{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/hills.png","webpack:///./src/img/platform.png","webpack:///./src/img/platformSmallTall.png","webpack:///./src/js/canvas.js","webpack:///./src/js/utils.js"],"names":["canvas","document","querySelector","c","getContext","scoreEl","width","innerWidth","height","innerHeight","addEventListener","gravity","Player","speed","position","x","y","velocity","fillStyle","fillRect","draw","Platform","image","drawImage","GenericObject","Star","radius","color","utils","randomIntFromRange","friction","prototype","save","beginPath","arc","Math","PI","shadowColor","shadowBlur","fill","closePath","restore","update","shatter","n","i","miniStars","push","MiniStar","call","ttl","opacity","Qubit","x_vel","createImage","imageSrc","Image","src","backgroundGradient","createLinearGradient","addColorStop","platformImage","platform","platformSmallTallImage","platformSmallTall","player","platforms","genericObjects","stars","backgroundStars","enemyQubits","playerQubits","ticker","randomStarSpawnRate","randomEnemyQubitSpawnRate","qubitColors","keys","right","pressed","left","up","scrollOffset","score","init","hills","random","animate","requestAnimationFrame","forEach","backgroundStar","genericObject","star","index","splice","miniStar","max","enemyQubit","setTimeout","playerQubit","indexPQ","innerHTML","console","log","keyCode","x_white","y_white","radius_white","color_white","x_vel_white","x_black","y_black","radius_black","color_black","x_vel_black","min","floor","randomColor","colors","length","distance","x1","y1","x2","y2","xDist","yDist","sqrt","pow","module","exports"],"mappings":"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","file":"./js/canvas.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/canvas.js\");\n","export default __webpack_public_path__ + \"cfffe4c371f5e11d372b398a87c51dd0.png\";","export default __webpack_public_path__ + \"ffab39d3487de561be1a081fcfb3806d.png\";","export default __webpack_public_path__ + \"0587f9be8e442eb74b2fe283bbf1a947.png\";","/*\r\nAuthor: Ashmit JaiSarita Gupta\r\nDate: 04-02-2022\r\n*/\r\n\r\n//Importing some utility functions\r\nimport utils from './utils.js';\r\n\r\n// Import Images to Be Used In Game\r\nimport platform from '../img/platform.png';\r\nimport hills from '../img/hills.png';\r\nimport platformSmallTall from '../img/platformSmallTall.png';\r\n\r\nconst canvas = document.querySelector('canvas'); // To store canvas element of DOM in a constant\r\nconst c = canvas.getContext('2d'); //Canvas element method to obtain the rendering context and its drawing functions for 2D Graphics.\r\n\r\nlet scoreEl = document.querySelector('#score-el')\r\n\r\ncanvas.width = innerWidth; // Setting canvas width to windows width\r\ncanvas.height = innerHeight; // Setting canvas height to windows height\r\n\r\naddEventListener('resize', function() {\r\n  // Resetting canvas size when window is resized\r\n  canvas.width = innerWidth;\r\n  canvas.height = innerHeight;\r\n});\r\nconst gravity = 0.6; // Gravity acting on Player/Enemy\r\n\r\n// Player class for blueprint of our player\r\nclass Player {\r\n  // Initializing/Setting properties of our player\r\n  constructor() {\r\n    this.speed = 10; // Player Speed\r\n    this.position = {\r\n      // Initial rendering position of our player\r\n      x: 100,\r\n      y: 100\r\n    };\r\n    this.velocity = {\r\n      // Initial velocity of player\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.width = 30; // Player(initially a square box) width\r\n    this.height = 30; // Player(initially a square box) width\r\n  }\r\n\r\n  // Let's draw our player on canvas\r\n  draw() {\r\n    c.fillStyle = 'red'; // Player(Box) Color\r\n    //Draw a filled rectangle (square in our case)\r\n    c.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n\r\n  // Updating our player properties on canvas as it moves\r\n  update() {\r\n    // Drawing our player on canvas\r\n    this.draw();\r\n\r\n    // Updating our player position\r\n    this.position.x += this.velocity.x;\r\n    this.position.y += this.velocity.y;\r\n\r\n    // Updating velocity in y direction due to gravity when player is inside our canvas\r\n    if (this.position.y + this.height + this.velocity.y <= canvas.height) {\r\n      this.velocity.y += gravity;\r\n    }\r\n  }\r\n}\r\n\r\n// Platform class for blueprint of platform\r\nclass Platform {\r\n  constructor({ x, y, image }) {\r\n    this.position = {\r\n      x, // same as x: x\r\n      y\r\n    };\r\n    this.image = image;\r\n    this.width = image.width;\r\n    this.height = image.height;\r\n  }\r\n\r\n  draw() {\r\n    c.drawImage(this.image, this.position.x, this.position.y);\r\n  }\r\n}\r\n\r\n// Generic Object class for blueprint of Generic Objects(Background Image, Hills)\r\nclass GenericObject {\r\n  constructor({ x, y, image }) {\r\n    this.position = {\r\n      x, // same as x: x\r\n      y\r\n    };\r\n    this.image = image;\r\n    this.width = image.width;\r\n    this.height = image.height;\r\n  }\r\n\r\n  draw() {\r\n    c.drawImage(this.image, this.position.x, this.position.y);\r\n  }\r\n}\r\n\r\n// Using this kind instead of class for ministars and stars so that each star object don't need to d=have their own draw and update method. instead they use one. Also permonce gets enhanced.\r\n\r\nfunction Star(x, y, radius, color) {\r\n  this.position = {\r\n    x,\r\n    y\r\n  };\r\n  (this.radius = radius), (this.color = color);\r\n  this.velocity = {\r\n    x: utils.randomIntFromRange(-4, 4),\r\n    y: 3\r\n  };\r\n  this.gravity = 0.3;\r\n  this.friction = 0.8;\r\n}\r\nStar.prototype.draw = function() {\r\n  c.save(); //Using save() and restore() show that the glow property only apply to stars and not other cancas element\r\n  c.beginPath(); // Start drawing path\r\n  c.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2, false); // Draw Circle\r\n  c.fillStyle = this.color;\r\n  c.shadowColor = `#E3EAEF`; // Glow Color\r\n  c.shadowBlur = 20;\r\n  c.fill(); // Fill the Circle\r\n  c.closePath(); // End drawing\r\n  c.restore();\r\n};\r\nStar.prototype.update = function() {\r\n  this.draw();\r\n\r\n  //When ball hits bottom of screen\r\n  if (this.position.y + this.radius + this.velocity.y > canvas.height) {\r\n    this.velocity.y = -this.velocity.y * this.friction;\r\n    this.shatter(4);\r\n  } else {\r\n    this.velocity.y += this.gravity;\r\n  }\r\n\r\n  this.position.x += this.velocity.x;\r\n  this.position.y += this.velocity.y;\r\n};\r\nStar.prototype.shatter = function(n) {\r\n  // Star should shatter into 'n' ministars when star hits the floor\r\n  // decreasing the radius of star each time it hits the floor so that new ministars are not rendered again and again\r\n  this.radius -= 3;\r\n  for (let i = 0; i < n; i++) {\r\n    miniStars.push(new MiniStar(this.position.x, this.position.y, 2));\r\n  }\r\n  // console.log(miniStars);\r\n};\r\n\r\nfunction MiniStar(x, y, radius, color) {\r\n  Star.call(this, x, y, radius, color);\r\n  this.velocity = {\r\n    x: utils.randomIntFromRange(-5, 5),\r\n    y: utils.randomIntFromRange(-15, 15)\r\n  };\r\n  this.gravity = 0.1;\r\n  this.friction = 0.8;\r\n  this.ttl = 100; // ttl: time to live - for how many frames should this stars live for\r\n  this.opacity = 1;\r\n}\r\nMiniStar.prototype.draw = function() {\r\n  c.save();\r\n  c.beginPath(); // Start drawing path\r\n  c.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2, false); // Draw Circle\r\n  c.fillStyle = `rgba(227, 234, 239, ${this.opacity})`;\r\n  c.shadowColor = `#E3EAEF`; // Glow Color\r\n  c.shadowBlur = 20;\r\n  c.fill(); // Fill the Circle\r\n  c.closePath(); // End drawing\r\n  c.restore();\r\n};\r\nMiniStar.prototype.update = function() {\r\n  this.draw();\r\n\r\n  //collision with floor\r\n  if (this.position.y + this.radius + this.velocity.y > canvas.height) {\r\n    this.velocity.y = -this.velocity.y * this.friction;\r\n  } else {\r\n    this.velocity.y += this.gravity;\r\n  }\r\n\r\n  // Movement\r\n  this.position.x += this.velocity.x;\r\n  this.position.y += this.velocity.y;\r\n\r\n  this.ttl -= 1;\r\n  this.opacity -= 1 / this.ttl; // To decrease opacity\r\n};\r\n\r\n// Creating attack balls (representing qubits)\r\nclass Qubit {\r\n  constructor(x, y, radius, x_vel, color) {\r\n    this.position = {\r\n      x,\r\n      y\r\n    };\r\n    this.velocity = {\r\n      x: x_vel,\r\n      y: 0\r\n    };\r\n    (this.radius = radius), (this.color = color);\r\n  }\r\n  draw() {\r\n    c.beginPath();\r\n    c.fillStyle = this.color;\r\n    c.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2, true);\r\n    c.fill();\r\n    c.closePath();\r\n  }\r\n  update() {\r\n    this.draw();\r\n\r\n    this.position.x += this.velocity.x;\r\n  }\r\n}\r\n\r\n// Creating Image Object and returning it to be drawn on canvas from the specified source\r\nfunction createImage(imageSrc) {\r\n  const image = new Image();\r\n  image.src = imageSrc;\r\n  return image;\r\n}\r\n\r\n// Background Gradient Object\r\nconst backgroundGradient = c.createLinearGradient(0, 0, 0, canvas.height);\r\nbackgroundGradient.addColorStop(0, '#171e26');\r\nbackgroundGradient.addColorStop(1, '#3f586b');\r\n\r\n// Creating Platfrom Image\r\nlet platformImage = createImage(platform);\r\nlet platformSmallTallImage = createImage(platformSmallTall);\r\n\r\n// Creating Object Of Player\r\nlet player = new Player();\r\n\r\n// Array to store platforms\r\nlet platforms = [];\r\n\r\n// Array to store generic objects\r\nlet genericObjects = [];\r\n\r\n// Array to store stars\r\nlet stars = [];\r\nlet miniStars = [];\r\nlet backgroundStars = [];\r\n\r\n// Array to store enemy qubits\r\nlet enemyQubits = [];\r\n// Array to store player qubits\r\nlet playerQubits = [];\r\n\r\n// time-counter for spawning stars when it is divisible by certain random number\r\nlet ticker = 0;\r\nlet randomStarSpawnRate = 150;\r\nlet randomEnemyQubitSpawnRate = 700;\r\n\r\n// Array to store colors of qubit representing diffrent states of qubit\r\nlet qubitColors = [ 'white', 'black', '#A6A6A6' ]; // white - 0, black - 1, #A6A6A6 - Grey - H|0> - Superposition\r\n\r\n// keys Object to store of keys pressed or not (initially keys are not pressed so false)\r\nconst keys = {\r\n  right: {\r\n    pressed: false\r\n  },\r\n  left: {\r\n    pressed: false\r\n  },\r\n  up: {\r\n    pressed: false\r\n  }\r\n};\r\n\r\nlet scrollOffset = 0; // To keep record of how far the player is from the origin in x-direction\r\n\r\nlet score = 0\r\n\r\n// Initialising function for initial drawing/ressetting everything\r\nfunction init() {\r\n  platformImage = createImage(platform);\r\n\r\n  player = new Player();\r\n\r\n  // Creating objects of platforms and drawing them at different location\r\n  platforms = [\r\n    new Platform({\r\n      x: platformImage.width * 4 + 9,\r\n      y: 350,\r\n      image: platformSmallTallImage\r\n    }),\r\n    new Platform({\r\n      x: -1,\r\n      y: 560,\r\n      image: platformImage\r\n    }),\r\n    new Platform({\r\n      x: platformImage.width - 3,\r\n      y: 560,\r\n      image: platformImage\r\n    }),\r\n    new Platform({\r\n      x: platformImage.width * 2 + 150,\r\n      y: 560,\r\n      image: platformImage\r\n    }),\r\n    new Platform({\r\n      x: platformImage.width * 3 + 300,\r\n      y: 560,\r\n      image: platformImage\r\n    }),\r\n    new Platform({\r\n      x: platformImage.width * 4 + 900,\r\n      y: 560,\r\n      image: platformImage\r\n    })\r\n  ];\r\n\r\n  // Creating objects of generic objects and drawing them at different location\r\n  genericObjects = [\r\n    new GenericObject({\r\n      x: -1,\r\n      y: 100,\r\n      image: createImage(hills)\r\n    })\r\n  ];\r\n\r\n  // Creating background stars\r\n  for (let i = 0; i < 45; i++) {\r\n    // Creating random state for background stars\r\n    const x = Math.random() * canvas.width;\r\n    const y = Math.random() * canvas.height;\r\n    const radius = Math.random() * 3;\r\n\r\n    backgroundStars.push(new Star(x, y, radius, 'white'));\r\n  }\r\n\r\n  scrollOffset = 0;\r\n}\r\n\r\n// Animation Loop\r\nfunction animate() {\r\n  requestAnimationFrame(animate); //Repeatedly creates an animation by executing code( inside animate() ) again and again as user makes changes to screen\r\n\r\n  // Resetting our canvas color\r\n  c.fillStyle = backgroundGradient;\r\n  c.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  // Drawing elements of backgroundStars array on screen\r\n  backgroundStars.forEach((backgroundStar) => {\r\n    backgroundStar.draw();\r\n  });\r\n\r\n  // Drawing elements of genericOjects array on screen\r\n  genericObjects.forEach((genericObject) => {\r\n    genericObject.draw();\r\n  });\r\n\r\n  // Drawing elements of platforms array on screen\r\n  platforms.forEach((platform) => {\r\n    platform.draw();\r\n  });\r\n\r\n  // Drawing elements of stars array on screen\r\n  stars.forEach((star, index) => {\r\n    star.update();\r\n    if (star.radius == 1) {\r\n      stars.splice(index, 1); // remove 1 star at the 'index' in stars array when the radius of this star is zero.\r\n    }\r\n  });\r\n  // Drawing elements of miniStars array on screen\r\n  miniStars.forEach((miniStar, index) => {\r\n    miniStar.update();\r\n    if (miniStar.ttl == 0) {\r\n      miniStars.splice(index, 1); // remove 1 ministar at the 'index' in ministars array after it lived for 'ttl' frames\r\n    }\r\n  });\r\n\r\n  ticker++;\r\n\r\n  if (ticker % randomStarSpawnRate == 0) {\r\n    const radius = 10;\r\n    const x = Math.max(Math.random() * canvas.width - radius);\r\n    stars.push(new Star(x, -100, radius, 'white'));\r\n    randomStarSpawnRate = utils.randomIntFromRange(150, 200);\r\n  }\r\n\r\n  // Creating enemy qubits\r\n  if (ticker % randomEnemyQubitSpawnRate == 0) {\r\n    const x = canvas.width + 100;\r\n    const y = player.position.y + player.height / 2;\r\n    const radius = 12;\r\n    const x_vel = -15;\r\n    const color = qubitColors[utils.randomIntFromRange(0, 2)];\r\n    enemyQubits.push(new Qubit(x, y, radius, x_vel, color));\r\n    randomEnemyQubitSpawnRate = utils.randomIntFromRange(300, 400);\r\n  }\r\n\r\n  // Drawing elements of enemyQubits array on screen\r\n  enemyQubits.forEach((enemyQubit, index) => {\r\n    enemyQubit.update();\r\n\r\n    // Deleting enemy qubit when it reaches left side of canvas\r\n    if (enemyQubit.position.x + enemyQubit.radius <= 0) {\r\n      setTimeout(() => {\r\n        enemyQubits.splice(index, 1);\r\n      }, 0)\r\n    }\r\n\r\n    // Player Qubit vs. enemy Qubit\r\n    playerQubits.forEach((playerQubit, indexPQ) => {\r\n      if(playerQubit.position.x + playerQubit.radius >= enemyQubit.position.x - enemyQubit.radius && \r\n        playerQubit.position.y === enemyQubit.position.y) {\r\n        score += 100\r\n        scoreEl.innerHTML = score\r\n        setTimeout(() => {\r\n          enemyQubits.splice(index, 1)\r\n          playerQubits.splice(indexPQ, 1)\r\n        }, 0)\r\n      }\r\n    })\r\n\r\n    // Loose condition 2: Enemy Qubit hits Player\r\n    if(player.position.y === enemyQubit.position.y && player.position.x + player.width >= enemyQubit.position.x - enemyQubit.radius) {\r\n      console.log('lost due to hit')\r\n    }\r\n  });\r\n\r\n  // Drawing elements of playerQubits array on screen\r\n  playerQubits.forEach((playerQubit, index) => {\r\n    playerQubit.update();\r\n\r\n    // Deleting player qubit when it reaches left side of canvas\r\n    if (playerQubit.position.x - playerQubit.radius >= canvas.width) {\r\n      setTimeout(() => {\r\n        playerQubits.splice(index, 1);\r\n      })\r\n    }\r\n  });\r\n\r\n  // updating our player\r\n  player.update();\r\n\r\n  if (\r\n     (keys.right.pressed && player.position.x < 0.75 * canvas.width)|| \r\n     (keys.right.pressed && scrollOffset === 2930 && player.position.x > 0) // So that scrren don't mobe more right when win position is reached\r\n  ) {\r\n    player.velocity.x = player.speed;\r\n  } else if (\r\n    (keys.left.pressed && player.position.x > 0.1 * canvas.width) ||\r\n    (keys.left.pressed && scrollOffset === 0 && player.position.x > 0) // So that scrren don't move more left at scrollOfset = 0\r\n  ) {\r\n    player.velocity.x = -player.speed;\r\n  } else {\r\n    player.velocity.x = 0;\r\n\r\n    if (keys.right.pressed) {\r\n      scrollOffset += player.speed;\r\n      platforms.forEach((platform) => {\r\n        platform.position.x -= player.speed;\r\n      });\r\n      genericObjects.forEach((genericObject) => {\r\n        genericObject.position.x -= player.speed * 0.66;\r\n      });\r\n    } else if (keys.left.pressed && scrollOffset > 0) {\r\n      scrollOffset -= player.speed;\r\n      platforms.forEach((platform) => {\r\n        platform.position.x += player.speed;\r\n      });\r\n\r\n      genericObjects.forEach((genericObject) => {\r\n        genericObject.position.x += player.speed * 0.66;\r\n      });\r\n    }\r\n  }\r\n\r\n  // Roof Collision\r\n  if (player.position.y + player.velocity.y - 10 <= 0) {\r\n    player.velocity.y = 15;\r\n  }\r\n\r\n  // platform collision detection\r\n  platforms.forEach((platform) => {\r\n    if (\r\n      player.position.y + player.height <= platform.position.y /* For making player stop above platform */ &&\r\n      player.position.y + player.height + player.velocity.y >=\r\n        platform.position.y /* For making it stop only when it hits the platform */ &&\r\n      player.position.x + player.width >=\r\n        platform.position.x /* For making it fall when its on left side of pltform  */ &&\r\n      player.position.x <= platform.position.x + platform.width\r\n    ) {\r\n      /* For making it fall when its on left side of pltform  */\r\n      player.velocity.y = 0;\r\n    }\r\n  });\r\n\r\n  // Win Codition\r\n  if (scrollOffset > platformImage.width * 4 + 500) {\r\n    console.log('Win');\r\n  }\r\n\r\n  // Lose Condition - 1: Death Pit\r\n  if (player.position.y > canvas.height) {\r\n    // Resetting stars array so that previous stars clear away when level is re-played after death\r\n    stars = [];\r\n    // miniStars = []\r\n    console.log('You Lose');\r\n    init();\r\n  }\r\n}\r\ninit();\r\nanimate();\r\n\r\naddEventListener('keydown', ({ keyCode }) => {\r\n  // console.log(keyCode)\r\n  switch (keyCode) {\r\n    //Movement\r\n    case 37:\r\n      // console.log('Left Keydown');\r\n      keys.left.pressed = true;\r\n      break;\r\n    case 39:\r\n      // console.log('Right Keydown');\r\n      keys.right.pressed = true;\r\n      break;\r\n    case 38:\r\n      // console.log('Up Keydown');\r\n      keys.up.pressed = true;\r\n      player.velocity.y -= 15;\r\n      break;\r\n    case 40:\r\n      // console.log('Down Keydown');\r\n      break;\r\n\r\n    // Qubit Spawning\r\n    case 81: // q: spawning qubit |0>\r\n      const x_white = player.position.x + player.width + 12;\r\n      const y_white = player.position.y + player.height / 2;\r\n      const radius_white = 12;\r\n      const color_white = 'white';\r\n      const x_vel_white = 15;\r\n      playerQubits.push(new Qubit(x_white, y_white, radius_white, x_vel_white, color_white));\r\n      // console.log(playerQubits);\r\n      break;\r\n    case 88: // q: spawning qubit |1>\r\n      const x_black = player.position.x + player.width + 12;\r\n      const y_black = player.position.y + player.height / 2;\r\n      const radius_black = 12;\r\n      const color_black = 'black';\r\n      const x_vel_black = 15;\r\n      playerQubits.push(new Qubit(x_black, y_black, radius_black, x_vel_black, color_black));\r\n  }\r\n});\r\n\r\naddEventListener('keyup', ({ keyCode }) => {\r\n  // console.log(keyCode)\r\n  switch (keyCode) {\r\n    case 37:\r\n      // console.log('Left Keyup');\r\n      keys.left.pressed = false;\r\n      break;\r\n    case 39:\r\n      // console.log('Right Keyup');\r\n      keys.right.pressed = false;\r\n      break;\r\n    case 38:\r\n      // console.log('Up Keyup');\r\n      break;\r\n    case 40:\r\n      // console.log('Down Keyup');\r\n      break;\r\n  }\r\n});","function randomIntFromRange(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nfunction randomColor(colors) {\r\n  return colors[Math.floor(Math.random() * colors.length)]\r\n}\r\n\r\nfunction distance(x1, y1, x2, y2) {\r\n  const xDist = x2 - x1\r\n  const yDist = y2 - y1\r\n\r\n  return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2))\r\n}\r\n\r\nmodule.exports = { randomIntFromRange, randomColor, distance }\r\n"],"sourceRoot":""}